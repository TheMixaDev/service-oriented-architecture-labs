openapi: '3.0.0'
info:
  title: "СОА спецификация OpenAPI"
  description: Navigator сервис для поиска и создания оптимальных маршрутов (REST API)
    

    Беляев Михаил и Дениченко Александр


    Группа P3412
    

    Вариант 8801
  version: 1.0.0
servers:
  - url: http://localhost:8889/api/v1


tags:
  - name: "Navigator"

paths:
  /navigator/route/{id-from}/{id-to}/{shortest}:
    get:
      tags:
        - "Navigator"
      summary: "Найти самый короткий или длинный маршрут между локациями"
      description: "Находит маршрут между двумя точками, представленными ID существующих маршрутов (`id-from`, `id-to`). Параметр `shortest` определяет, искать самый короткий (true) или самый длинный (false) путь."
      operationId: "findOptimalRoute"
      parameters:
        - name: id-from
          in: path
          description: "ID начального маршрута"
          required: true
          schema:
            type: integer
            format: int64
            minimum: 0
            exclusiveMinimum: true
            example: 1
        - name: id-to
          in: path
          description: "ID конечного маршрута"
          required: true
          schema:
            type: integer
            format: int64
            minimum: 0
            exclusiveMinimum: true
            example: 2
        - name: shortest
          in: path
          description: "'true' для поиска самого короткого, 'false' - для самого длинного"
          required: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: "Найденный оптимальный маршрут"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Route'
        '400':
          description: "Некорректные данные"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalid_boolean:
                  summary: "Неверный формат boolean"
                  value:
                    status: 400
                    message: "Параметр 'shortest' должен быть 'true' или 'false'"
                invalid_id:
                  summary: "Неверный ID"
                  value:
                    status: 400
                    message: "ID должен быть положительным числом"
        '404':
          description: "Один из указанных ID не найден"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                route_not_found:
                  summary: "Маршрут не найден"
                  value:
                    status: 404
                    message: "Маршрут с ID 999 не найден"
                no_path_found:
                  summary: "Путь не найден"
                  value:
                    status: 404
                    message: "Невозможно найти путь между указанными точками"
        '500':
          description: "Внутренняя ошибка сервера"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        default:
          description: "Прочие сообщения об ошибках"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'

  /navigator/route/add/{id-from}/{id-to}/{distance}:
    post:
      tags:
        - "Navigator"
      summary: "Добавить новый маршрут между локациями по их ID"
      description: "Создает новый маршрут между двумя существующими точками (`from` и `to` берутся из маршрутов с `id-from` и `id-to`) с указанной дистанцией."
      operationId: "createRouteByIds"
      parameters:
        - name: id-from
          in: path
          description: "ID маршрута, откуда взять начальную точку"
          required: true
          schema:
            type: integer
            format: int64
            minimum: 0
            exclusiveMinimum: true
            example: 1
        - name: id-to
          in: path
          description: "ID маршрута, откуда взять конечную точку"
          required: true
          schema:
            type: integer
            format: int64
            minimum: 0
            exclusiveMinimum: true
            example: 2
        - name: distance
          in: path
          description: "Дистанция нового маршрута"
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            exclusiveMinimum: true
            example: 150
      responses:
        '201':
          description: "Новый маршрут успешно создан"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Route'
        '400':
          description: "Некорректные данные"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalid_distance:
                  summary: "Неверная дистанция"
                  value:
                    status: 400
                    message: "Дистанция должна быть больше 1"
                invalid_id:
                  summary: "Неверный ID"
                  value:
                    status: 400
                    message: "ID должен быть положительным числом"
                same_points:
                  summary: "Одинаковые точки"
                  value:
                    status: 400
                    message: "Начальная и конечная точки не могут совпадать"
        '404':
          description: "Один из указанных ID не найден"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: 404
                message: "Маршрут с ID 999 не найден"
        '409':
          description: "Маршрут уже существует"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                status: 409
                message: "Маршрут между этими точками уже существует"
        '500':
          description: "Внутренняя ошибка сервера"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        default:
          description: "Прочие сообщения об ошибках"
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    
    Coordinates:
      type: object
      description: "Координаты"
      xml:
        name: "Coordinates"
      properties:
        x:
          type: number
          format: double
          maximum: 716
          description: "X координата. Максимальное значение поля: 716"
          example: 100.0
        y:
          type: integer
          format: int64
          description: "Y координата. Поле не может быть null"
          example: 100
      required:
        - y

    Location:
      type: object
      description: "Местоположение с координатами и его названием"
      xml:
        name: "Location"
      properties:
        x:
          type: number
          format: double
          description: "X координата. Не может быть null."
          example: 100.0
        y:
          type: number
          format: double
          description: "Y координата."
          example: 100.0
        name:
          type: string
          minLength: 1
          description: "Название локации. Не может быть пустой, не может быть null."
          example: "Москва"
      required:
        - x
        - name

    Route:
      type: object
      description: "Описывает маршрут с начальной и конечной точками"
      xml:
        name: "Route"
      properties:
        id:
          type: integer
          format: int64
          description: "Уникальный идентификатор (автоматически генерируется). Значение поля должно быть больше 0."
          readOnly: true
          minimum: 0
          exclusiveMinimum: true
          example: 1
        name:
          type: string
          description: "Название маршрута"
          minLength: 1
          example: "Маршрут Москва-СПб"
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        creationDate:
          type: string
          format: date-time
          description: "Дата и время создания (автоматически генерируется)."
          readOnly: true
          example: "2025-01-01T00:00:00Z"
        from:
          $ref: '#/components/schemas/Location'
        to:
          $ref: '#/components/schemas/Location'
        distance:
          type: integer
          format: int64
          description: "Длина маршрута. Должна быть больше 1."
          minimum: 1
          exclusiveMinimum: true
          nullable: true
          example: 635
      required:
        - name
        - coordinates
        - from
        - to

    Error:
      type: object
      description: "Ошибка"
      xml:
        name: "Error"
      properties:
        status:
          type: integer
          format: int64
          description: "Статус ошибки"
        message:
          type: string
          description: "Сообщение об ошибке"
      required:
        - status
        - message
    
    InternalServerError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            status:
              example: 500
            message:
              example: "Внутренняя ошибка сервера"
